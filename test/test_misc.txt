Miscellaneous Functions
-----------------------

    >>> import gmpy2
    >>> import numbers
    >>> gmpy2.version()
    '2.0.9'
    >>> gmpy2.mp_limbsize() in (32,64)
    True
    >>> gmpy2.mp_version().split()[0] in ['GMP', 'MPIR']
    True
    >>> check_gmp = gmpy2.mp_version().startswith('GMP') and '5.0.0' <= gmpy2.mp_version().split()[1]
    >>> check_mpir = gmpy2.mp_version().startswith('MPIR') and '2.4.0' <= gmpy2.mp_version().split()[1]
    >>> check_gmp or check_mpir
    True
    >>> gmpy2.mpfr_version() and gmpy2.mpfr_version().startswith('MPFR')
    True
    >>> gmpy2.mpfr_version() and '3.1.0' <= gmpy2.mpfr_version().split()[1]
    True
    >>> gmpy2.mpc_version() and gmpy2.mpc_version().startswith('MPC')
    True
    >>> gmpy2.mpc_version() and '1.0' <= gmpy2.mpc_version().split()[1]
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Integral)
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Rational)
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Real)
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Complex)
    True
    >>> isinstance(gmpy2.mpq(2,3), numbers.Integral)
    False
    >>> isinstance(gmpy2.mpq(2,3), numbers.Rational)
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Real)
    True
    >>> isinstance(gmpy2.mpz(23), numbers.Complex)
    True
    >>> isinstance(gmpy2.mpfr(2.0), numbers.Integral)
    False
    >>> isinstance(gmpy2.mpfr(2.0), numbers.Rational)
    False
    >>> isinstance(gmpy2.mpfr(2.0), numbers.Real)
    True
    >>> isinstance(gmpy2.mpfr(2.0), numbers.Complex)
    True
    >>> isinstance(gmpy2.mpc(2,3), numbers.Integral)
    False
    >>> isinstance(gmpy2.mpc(2,3), numbers.Rational)
    False
    >>> isinstance(gmpy2.mpc(2,3), numbers.Real)
    False
    >>> isinstance(gmpy2.mpc(2,3), numbers.Complex)
    True
